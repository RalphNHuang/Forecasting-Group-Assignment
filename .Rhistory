knitr::opts_chunk$set(echo = TRUE)
col_raw = read.csv("./Projectdata.csv", fileEncoding = "UTF-8")
col_raw = read.csv("./data.csv", fileEncoding = "UTF-8")
col_raw = read.csv("./data.xlsx", fileEncoding = "UTF-8")
View(col_raw)
col_raw = read.csv("./Projectdata.csv", fileEncoding = "UTF-8")
library(tidyverse)
col_raw = read_csv("./Projectdata.csv")
View(col_raw)
acf(hobby_1 = col_raw$Hobbies_CA_1)
acf(col_raw$Hobbies_CA_1)
par(mfrow=c(3,2))
acf(col_raw$Hobbies_CA_1)
pacf(col_raw$Hobbies_CA_1)
acf(col_raw$Hobbies_CA_3)
pacf(col_raw$Hobbies_CA_3)
acf(col_raw$Hobbies_CA_3)
pacf(col_raw$Hobbies_CA_3)
knitr::opts_chunk$set(echo = TRUE)
col_raw = read_csv("./dat/Projectdata.csv")
library(tidyverse)
col_raw = read_csv("./dat/Projectdata.csv")
install.packages("tseries")
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
adf.test(rawData$Hobbies_CA_1)
library(tidyverse)
rawData = read_csv("./dat/Projectdata.csv")
library(tseries)
adf.test(rawData$Hobbies_CA_1)
adf.test(rawData$Hobbies_CA_2)
library(tseries)
adf.test(rawData$Hobbies_CA_1)
adf.test(rawData$Hobbies_CA_2)
colnames(rawData)
par(mfrow=c(3,2))
acf(rawData$Hobbies_CA_1)
pacf(rawData$Hobbies_CA_1)
acf(rawData$Hobbies_CA_2)
pacf(rawData$Hobbies_CA_2)
acf(rawData$Hobbies_CA_3)
pacf(rawData$Hobbies_CA_3)
par(mfrow=c(3,2))
acf(rawData$Household_1_CA_1)
pacf(rawData$Household_1_CA_1)
acf(rawData$Household_1_CA_2)
pacf(rawData$Household_1_CA_2)
acf(rawData$Household_1_CA_3)
pacf(rawData$Household_1_CA_3)
par(mfrow=c(3,2))
acf(rawData$Household_2_CA_1)
pacf(rawData$Household_2_CA_1)
acf(rawData$Household_2_CA_2)
pacf(rawData$Household_2_CA_2)
acf(rawData$Household_2_CA_3)
pacf(rawData$Household_2_CA_3)
par(mfrow=c(3,2))
acf(rawData$Foods_1_CA_1)
pacf(rawData$Foods_1_CA_1)
acf(rawData$Foods_1_CA_2)
pacf(rawData$Foods_1_CA_2)
acf(rawData$Foods_1_CA_3)
pacf(rawData$Foods_1_CA_3)
par(mfrow=c(3,2))
acf(rawData$Foods_2_CA_1)
pacf(rawData$Foods_2_CA_1)
acf(rawData$Foods_2_CA_2)
pacf(rawData$Foods_2_CA_2)
acf(rawData$Foods_2_CA_3)
pacf(rawData$Foods_2_CA_3)
par(mfrow=c(3,2))
acf(rawData$Foods_3_CA_1)
pacf(rawData$Foods_3_CA_1)
acf(rawData$Foods_3_CA_2)
pacf(rawData$Foods_3_CA_2)
acf(rawData$Foods_3_CA_3)
pacf(rawData$Foods_3_CA_3)
library(tseries)
adf.test(rawData$Hobbies_CA_1)
adf.test(rawData$Hobbies_CA_2)
adf.test(rawData$Hobbies_CA_3)
library(tseries)
adf.test(rawData$Household_1_CA_1)
adf.test(rawData$Household_1_CA_2)
adf.test(rawData$Household_1_CA_3)
install.packages("TBATS")
install.packages("forecast")
library(forecast)
View(rawData)
library(tidyverse)
rawData$date %>% as.POSIXct.Date()
nrow(rawData)-28
### Dataset splition
trainData = rawData[c(1:(nrow(rawData)-28)),]
testData = rawData[c((nrow(rawData)-27):nrow(rawData)),]
rawData$date[1]
as.POSIXct.Date(rawData$date[1])
as.POSIXct.Date(rawData$date[1]) %>% year()
hobby_ts_1 = ts(trainData$Hobbies_CA_1, start = 1)
plot(hobby_ts_1)
tbats_hobby_1 = tbats(hobby_ts_1)
predict(tbats_hobby_1)
tbats_hobby_1_pred = forecast(tbats_hobby_1, level = c(95), h = 28)
plot(tbats_hobby_1_pred)
tbats_hobby_1_pred
hobby_ts_1 = msts(trainData$Hobbies_CA_1, start = 1, ts.frequency = c(7,30.4, 365.25))
hobby_ts_1 = msts(trainData$Hobbies_CA_1, start = 1, seasonal.periods =  = c(7,30.4, 365.25))
hobby_ts_1 = msts(trainData$Hobbies_CA_1, start = 1, seasonal.periods = c(7,30.4, 365.25))
plot(hobby_ts_1)
tbats_hobby_1 = tbats(hobby_ts_1)
tbats_hobby_1_pred = forecast(tbats_hobby_1, level = c(95), h = 28)
plot(tbats_hobby_1_pred)
tbats_hobby_1_pred
tbats_hobby_1_pred$fitted
tbats_hobby_1_pred$fitted[1942:1969]
tbats_hobby_1_pred$series
tbats_hobby_1_pred$fitted %>% length()
tbats_hobby_1_pred$upper
tbats_hobby_1_pred$method
tbats_hobby_1_pred$mean
c(1,2)^2
cal.devisor = function(ts_vector){
tmp = ts_vector[2:length(ts_vector)]-ts_vector[1:(length(ts_vector)-1)]
output = sum(tmp^2)/(length(ts_vector)-1)
return(output)
}
cal.RMSSE = function(pred, origin, devisor){
if(length(pred) != length(origin)){
cat("lengthError: please keep the length of pred and the length of origin consistent")
}
else{
output = sqrt(sum((pred - origin)^2)/(devisor*length(pred)))
return(output)
}
}
cal.RMSSE(tbats_hobby_1_pred$mean, testData$Hobbies_CA_1, cal.devisor(trainData$Hobbies_CA_1))
hobby_ts_1 = msts(trainData$Hobbies_CA_1, start = 1)
hobby_ts_1 = ts(trainData$Hobbies_CA_1, start = 1)
plot(hobby_ts_1)
tbats_hobby_1 = tbats(hobby_ts_1)
tbats_hobby_1_pred = forecast(tbats_hobby_1, level = c(95), h = 28)
plot(tbats_hobby_1_pred)
tbats_hobby_1_pred$mean
cal.RMSSE(tbats_hobby_1_pred$mean, testData$Hobbies_CA_1, cal.devisor(trainData$Hobbies_CA_1))
