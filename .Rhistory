esx_holiday_RMSSE_v
esx_snapCA_RMSSE_v
source("./R/utils.R")
source("./R/dataUtils.R")
load('./.RData')
load("./RData/dataset.RData")
load("./RData/scaled_naive.RData")
load('./RData/arima_crossH_RMSSE.RData')
load('./RData/arimax_crossH_RMSSE.RData')
load("./RData/tbats.RData")
load('./RData/arima_RMSE_train_v')
source("./R/utils.R")
source("./R/dataUtils.R")
load('./.RData')
load("./RData/dataset.RData")
load("./RData/scaled_naive.RData")
load('./RData/arima_crossH_RMSSE.RData')
load('./RData/arimax_crossH_RMSSE.RData')
load("./RData/tbats.RData")
load('./RData/arima_RMSE_train_v.RData')
load('./RData/arima_RMSE_test_v.RData')
dir("./RData/")
source("./R/utils.R")
source("./R/dataUtils.R")
load('./.RData')
load("./RData/dataset.RData")
load("./RData/scaled_naive.RData")
load('./RData/arima_crossH_RMSSE.RData')
load('./RData/arimax_crossH_RMSSE.RData')
load("./RData/tbats.RData")
# load('./RData/arima_RMSE_train_v.RData')
# load('./RData/arima_RMSE_test_v.RData')
# load('./RData/arimax_RMSE_train_v.RData')
# load('./RData/arimax_RMSE_test_v.RData')
for i in dir("./RData/"):
for i in dir("./RData/"):
for i in dir("./RData/"):
print(i)
load("./RData/"+i)
for (i in dir("./RData/")){
print(i)
load("./RData/"+i)
}
for (i in dir("./RData/")){
print(i)
path = paste("./RData/", i, sep = "")
load(path)
}
arimax_RMSSE_v
for (i in dir("./RData/")){
print(i)
path = paste("./RData/", i, sep = "")
load(path)
}
naive_RMSSE_v
nrow(naive_RMSSE_v)
class(naive_RMSSE_v)
rbind(naive_RMSSE_v,snaive_RMSSE_v)
rbind(naive_RMSSE_v,snaive_RMSSE_v,ses_RMSSE_v)
rbind(naive_RMSSE_v
,snaive_RMSSE_v
,ses_RMSSE_v
,ma_RMSSE_v
,esx_holiday_RMSSE_v
,esx_snap_RMSSE_v
,arima_RMSSE_v
,arimax_snap_RMSSE_v
,hw_RMSSE_v
,tbats_RMSSE_v
)
cbind(naive_RMSSE_v
,snaive_RMSSE_v
,ses_RMSSE_v
,ma_RMSSE_v
,esx_holiday_RMSSE_v
,esx_snap_RMSSE_v
,arima_RMSSE_v
,arimax_snap_RMSSE_v
,hw_RMSSE_v
,tbats_RMSSE_v
)
cbind(naive_RMSE_train_v
,snaive_RMSE_train_v
,ses_RMSE_train_v
,ma_RMSE_train_v
,esx_holiday_RMSE_train_v
,esx_snap_RMSE_train_v
,arima_RMSE_train_v
,arimax_RMSE_train_v
,hw_RMSE_train_v
,tbats_RMSE_train_v
)
for (i in dir("./RData/")){
print(i)
path = paste("./RData/", i, sep = "")
load(path)
}
for (i in dir("./RData/")){
print(i)
path = paste("./RData/", i, sep = "")
load(path)
}
for (i in dir("./1.2.f/")){
print(i)
path = paste("./1.2.f/", i, sep = "")
load(path)
}
cbind(naive_RMSE_train_v
,snaive_RMSE_train_v
,ses_RMSE_train_v
,ma_RMSE_train_v
,esx_holiday_RMSE_train_v
,esx_snap_RMSE_train_v
,arima_RMSE_train_v
,arimax_RMSE_train_v
,hw_RMSE_train_v
,tbats_RMSE_train_v
)
naive_RMSE_train_v
cbind(naive_RMSE_train_v,naive_RMSE_test_v)
cbind(snaive_RMSE_train_v,snaive_RMSE_test_v)
cbind(ses_RMSE_train_v,ses_RMSE_test_v)
cbind(ma_RMSE_train_v,ma_RMSE_test_v)
cbind(esx_holiday_RMSE_train_v,esx_holiday_RMSE_test_v)
cbind(esx_snap_RMSE_train_v,esx_snap_RMSE_test_v)
cbind(arima_RMSE_train_v,arima_RMSE_test_v)
cbind(arimax_RMSE_train_v,arimax_RMSE_test_v)
cbind(hw_RMSE_train_v,hw_RMSE_test_v)
cbind(tbats_RMSE_train_v,tbats_RMSE_test_v)
cbind('naive',naive_RMSE_train_v,naive_RMSE_test_v)
cbind('snaive',snaive_RMSE_train_v,snaive_RMSE_test_v)
cbind('es',ses_RMSE_train_v,ses_RMSE_test_v)
cbind('ma',ma_RMSE_train_v,ma_RMSE_test_v)
cbind('esx_holiday',esx_holiday_RMSE_train_v,esx_holiday_RMSE_test_v)
cbind('esx_snap',esx_snap_RMSE_train_v,esx_snap_RMSE_test_v)
cbind('arima',arima_RMSE_train_v,arima_RMSE_test_v)
cbind('arimax',arimax_RMSE_train_v,arimax_RMSE_test_v)
cbind('holtwinters',hw_RMSE_train_v,hw_RMSE_test_v)
cbind('tbats',tbats_RMSE_train_v,tbats_RMSE_test_v)
cbind(naive_RMSE_train_v,naive_RMSE_test_v)
cbind(snaive_RMSE_train_v,snaive_RMSE_test_v)
cbind(ses_RMSE_train_v,ses_RMSE_test_v)
cbind(ma_RMSE_train_v,ma_RMSE_test_v)
cbind(esx_holiday_RMSE_train_v,esx_holiday_RMSE_test_v)
cbind(esx_snap_RMSE_train_v,esx_snap_RMSE_test_v)
cbind(arima_RMSE_train_v,arima_RMSE_test_v)
cbind(arimax_RMSE_train_v,arimax_RMSE_test_v)
cbind(hw_RMSE_train_v,hw_RMSE_test_v)
cbind(tbats_RMSE_train_v,tbats_RMSE_test_v)
class(cbind(naive_RMSE_train_v,naive_RMSE_test_v))
naive_RMSE_train_v
naive_RMSE_train_v
naive_RMSE_test_v
c(naive_RMSE_train_v)
data.frame(cbind(naive_RMSE_train_v,naive_RMSE_test_v))
names(trainData)
names(trainData[,2:19])
name_list = names(trainData[,2:19])
data.frame(cbind(naive_RMSE_train_v,naive_RMSE_test_v),,row.names = name_list)
name_list = names(trainData[,2:19])
data.frame(cbind(naive_RMSE_train_v,naive_RMSE_test_v),row.names = name_list)
data.frame(cbind(snaive_RMSE_train_v,snaive_RMSE_test_v),row.names = name_list)
data.frame(cbind(ses_RMSE_train_v,ses_RMSE_test_v),row.names = name_list)
data.frame(cbind(ma_RMSE_train_v,ma_RMSE_test_v),row.names = name_list)
data.frame(cbind(esx_holiday_RMSE_train_v,esx_holiday_RMSE_test_v),row.names = name_list)
data.frame(cbind(esx_snap_RMSE_train_v,esx_snap_RMSE_test_v),row.names = name_list)
data.frame(cbind(arima_RMSE_train_v,arima_RMSE_test_v),row.names = name_list)
data.frame(cbind(arimax_RMSE_train_v,arimax_RMSE_test_v),row.names = name_list)
data.frame(cbind(hw_RMSE_train_v,hw_RMSE_test_v),row.names = name_list)
data.frame(cbind(tbats_RMSE_train_v,tbats_RMSE_test_v),row.names = name_list)
summary(ses_pred_list)
for (i in ses_pred_list):
for (i in ses_pred_list){
print(summary(i))
}
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(ses_pred_list[1])
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(ses_pred_list[1][1])
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(unlist(ses_pred_list[1]))
# you can choose to summary different model(by change model_list) with different product(by change [1])
ses_pred_list[1]
# you can choose to summary different model(by change model_list) with different product(by change [1])
ses_pred_list[1]
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(naive_pred_list[1])
summary(snaive_pred_list[1])
summary(ses_pred_list[1])
summary(ma_pred_list[1])
summary(esx_holiday_pred_list[1])
summary(esx_snap_pred_list[1])
summary(arima_pred_list[1])
summary(arimax_pred_list_snap[1])
summary(hw_pred_list[1])
ses_pred_list
summary(naive_pred_list[1])
summary(tbats_list[[1]])
summary(naive)
summary(naive())
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(hw_list[[1]])
summary(tbats_list[[1]])
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(naive)
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(naive())
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(snaive)
# you can choose to summary different model(by change model_list) with different product(by change [1])
# summary(ma_)
summary(arima_list)
summary(arimax_list_snap)
summary(hw_list[[1]])
summary(tbats_list[[1]])
# you can choose to summary different model(by change model_list) with different product(by change [1])
# summary(ma_)
print(summary(arima_list))
print(summary(arimax_list_snap))
print(summary(hw_list[[1]]))
print(summary(tbats_list[[1]]))
print(naive_crossH_RMSSE)
print(ses_crossH_RMSSE)
print(esx_holiday_crossH_RMSSE)
print(esx_snap_crossH_RMSSE)
print(arima_crossH_RMSSE)
print(arimax_crossH_RMSSE)
print(hw_crossH_RMSSE)
print(tbats_crossH_RMSSE)
source("./R/utils.R")
source("./R/dataUtils.R")
load('./.RData')
for (i in dir("./RData/")){
path = paste("./RData/", i, sep = "")
load(path)
}
for (i in dir("./1.2.f/")){
path = paste("./1.2.f/", i, sep = "")
load(path)
}
source("./R/utils.R")
source("./R/dataUtils.R")
load('./.RData')
for (i in dir("./RData/")){
path = paste("./RData/", i, sep = "")
load(path)
}
for (i in dir("./1.2.f/")){
path = paste("./1.2.f/", i, sep = "")
load(path)
}
for (i in dir("./RData/")){
path = paste("./RData/", i, sep = "")
load(path)
}
for (i in dir("./1.2.f/")){
path = paste("./1.2.f/", i, sep = "")
load(path)
}
source("./R/utils.R")
source("./R/dataUtils.R")
load('./.RData')
for (i in dir("./RData/")){
path = paste("./RData/", i, sep = "")
load(path)
}
for (i in dir("./1.2.f/")){
path = paste("./1.2.f/", i, sep = "")
load(path)
}
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(ma_list)
print(summary(arima_list))
print(summary(arimax_list_snap))
print(summary(hw_list[[1]]))
print(summary(tbats_list[[1]]))
# you can choose to summary different model(by change model_list) with different product(by change [1])
summary(ma_list[[1]])
print(summary(arima_list[[2]]))
print(summary(arimax_list_snap[[3]]))
print(summary(hw_list[[4]]))
print(summary(tbats_list[[5]]))
print(summary(ma_cat_list[[1]]))
cbind(naive_cat_RMSSE_v
,snaive_cat_RMSSE_v
,ma_cat_RMSSE_v
,cat_ses_RMSSE_v
,cat_esx_holiday_RMSSE_v
,cat_esx_snap_RMSSE_v
,cat_arima_RMSSE_v
,cat_arimax_RMSSE_v
,cat_hw_RMSSE_v
,cat_tbats_RMSSE_v
)
print(summary(ma_cat_list[[1]]))
# model
print(summary(ma_cat_list[[1]]))
print(summary(cat_ses_list[[1]]))
print(summary(cat_esx_holiday_list[[1]]))
print(summary(cat_esx_snap_list[[1]]))
print(summary(cat_hw_list[[1]]))
print(summary(cat_tbats_list[[1]]))
print(cbind(naive_cat_RMSSE_v
,snaive_cat_RMSSE_v
,ma_cat_RMSSE_v
,cat_ses_RMSSE_v
,cat_esx_holiday_RMSSE_v
,cat_esx_snap_RMSSE_v
,cat_arima_RMSSE_v
,cat_arimax_RMSSE_v
,cat_hw_RMSSE_v
,cat_tbats_RMSSE_v
))
# model
print(summary(ma_week_list[[1]]))
print(summary(week_ses_list[[1]]))
print(summary(ma_week_list[[1]]))
print(summary(week_esx_holiday_list[[1]]))
print(summary(week_esx_snap_list[[1]]))
print(summary(week_hw_list[[1]]))
print(summary(week_tbats_list[[1]]))
week_ses_list
week_tbats_list
print(cbind(naive_week_RMSSE_v
,snaive_week_RMSSE_v
,ma_week_RMSSE_v
,week_ses_RMSSE_v
,week_esx_holiday_RMSSE_v
,week_esx_snap_RMSSE_v
,week_arima_RMSSE_v
,week_arimax_RMSSE_v
,week_hw_RMSSE_v
,week_tbats_RMSSE_v
))
knitr::opts_chunk$set(echo = TRUE)
#重要！导入所有函数，需要tidyverse包
source("./R/utils.R")
source("./R/dataUtils.R")
load("./RData/dataset.RData")
### Dataset splition
rawData = read_csv("./dat/Projectdata.csv")
rawData[,2:ncol(rawData)] = apply(rawData[,2:ncol(rawData)], 2, scale)
trainData = rawData[c(1:(nrow(rawData)-28)),]
testData = rawData[c((nrow(rawData)-27):nrow(rawData)),]
### Aggregation
# by categories
trainAggCat = agg_by_cat(trainData)
testAggCat = agg_by_cat(testData)
# by week
trainAggWeek = agg_by_week(trainData)
testAggWeek = agg_by_week(testData)
# by store
trainAggStore = agg_by_store(trainData)
testAggStore = agg_by_store(testData)
save(rawData, testAggCat, testAggStore, testAggWeek, testData,
trainAggCat, trainAggStore, trainAggWeek, trainData,
file = "./RData/dataset.RData")
trainData = rawData[c(1:(nrow(rawData)-28)),]
testData = rawData[c((nrow(rawData)-27):nrow(rawData)),]
# by categories
trainAggCat = agg_by_cat(trainData)
testAggCat = agg_by_cat(testData)
# by store
trainAggStore = agg_by_store(trainData)
testAggStore = agg_by_store(testData)
# by week
trainAggWeek = agg_by_week(trainData)
testAggWeek = agg_by_week(testData)
ts_list = lapply(trainData[,2:ncol(rawData)], ts)
devisors = unlist(lapply(trainData[,2:ncol(trainData)], cal.devisor))
ses_crossH_RMSSE = data.frame()
for (h in 1:28) {
ses_pred_list = lapply(ts_list, ses, h=h)
ses_RMSSE_v = eval.RMSSE(testData, ses_pred_list, h = h, devisor = devisors)
ses_crossH_RMSSE = rbind(ses_crossH_RMSSE, ses_RMSSE_v)
}
names(ses_crossH_RMSSE) = names(ses_RMSSE_v)
print(ses_crossH_RMSSE)
ses_RMSE_train_v = eval.RMSE(trainData, ses_pred_list, mode = "train")
ses_RMSE_test_v = eval.RMSE(testData, ses_pred_list, mode = "test")
cat_ts_list = lapply(trainAggCat[,2:ncol(trainAggCat)], ts)
cat_ses_list = lapply(cat_ts_list, ses, h=4)
cat_devisors = unlist(lapply(trainAggCat[,2:ncol(trainAggCat)], cal.devisor))
cat_ses_RMSSE_v = eval.RMSSE(testAggCat, cat_ses_list, h=4, devisor = cat_devisors)
print(cat_ses_RMSSE_v)
store_ts_list = lapply(trainAggStore[,2:ncol(trainAggStore)], ts)
store_ses_list = lapply(store_ts_list, ses, h=4)
store_devisors = unlist(lapply(trainAggStore[,2:ncol(trainAggStore)], cal.devisor))
store_ses_RMSSE_v = eval.RMSSE(testAggStore, store_ses_list, h=4, devisor = store_devisors)
print(store_ses_RMSSE_v)
week_ts_list = lapply(trainAggWeek[,2:ncol(trainAggWeek)], ts)
week_ses_list = lapply(week_ts_list, ses, h=4)
week_devisors = unlist(lapply(trainAggWeek[,2:ncol(trainAggWeek)], cal.devisor))
week_ses_RMSSE_v = eval.RMSSE(testAggWeek, week_ses_list, h = 4, devisor = week_devisors)
print(week_ses_RMSSE_v)
ts_list = lapply(trainData[,2:ncol(rawData)], ts)
hw_list = lapply(ts_list, ets)
devisors = unlist(lapply(trainData[,2:ncol(trainData)], cal.devisor))
hw_crossH_RMSSE = data.frame()
for (h in 1:28) {
hw_pred_list = lapply(hw_list, forecast.beta, h = h)
hw_RMSSE_v = eval.RMSSE(testData, hw_pred_list, h = h, devisor = devisors)
hw_crossH_RMSSE = rbind(hw_crossH_RMSSE, hw_RMSSE_v)
}
names(hw_crossH_RMSSE) = names(hw_RMSSE_v)
print(hw_crossH_RMSSE)
step_1_hw_pred_seq = c()
for (i in 1:28) {
train_data_step_1 = rawData[c(1:(nrow(rawData)-i)),]
test_data_step_1 = rawData[c((nrow(rawData)-i+1):nrow(rawData)),]
train_step_1_ts = ts(train_data_step_1$Hobbies_CA_1)
hw_step_1 = ets(train_step_1_ts)
hw_pred_step_1 = forecast.beta(hw_list,h=1)
step_1_hw_pred_seq[i] = hw_pred_step_1
}
step_1_hw_pred_seq = c()
for (i in 1:28) {
train_data_step_1 = rawData[c(1:(nrow(rawData)-i)),]
test_data_step_1 = rawData[c((nrow(rawData)-i+1):nrow(rawData)),]
train_step_1_ts = ts(train_data_step_1$Hobbies_CA_1)
hw_step_1 = ets(train_step_1_ts[[1]])
hw_pred_step_1 = forecast.beta(hw_list,h=1)
step_1_hw_pred_seq[i] = hw_pred_step_1
}
hw_RMSE_train_v = eval.RMSE(trainData, hw_pred_list, mode = "train")
hw_RMSE_test_v = eval.RMSE(testData, hw_pred_list, mode = "test")
cat_ts_list = lapply(trainAggCat[,2:ncol(trainAggCat)], msts.beta)
cat_hw_list = lapply(cat_ts_list, ets)
cat_hw_pred_list = lapply(cat_ts_list, forecast.beta)
cat_devisors = unlist(lapply(trainAggCat[,2:ncol(trainAggCat)], cal.devisor))
cat_hw_RMSSE_v = eval.RMSSE(testAggCat, cat_hw_pred_list, devisor = cat_devisors)
print(cat_hw_RMSSE_v)
store_ts_list = lapply(trainAggStore[,2:ncol(trainAggStore)], msts.beta)
store_hw_list = lapply(store_ts_list, ets)
store_hw_pred_list = lapply(store_ts_list, forecast.beta)
store_devisors = unlist(lapply(trainAggStore[,2:ncol(trainAggStore)], cal.devisor))
store_hw_RMSSE_v = eval.RMSSE(testAggStore, store_hw_pred_list, devisor = store_devisors)
print(store_hw_RMSSE_v)
week_ts_list = lapply(trainAggWeek[,2:ncol(trainAggWeek)], msts.beta)
week_hw_list = lapply(week_ts_list, ets)
week_hw_pred_list = lapply(week_ts_list, forecast.beta, h = 4)
week_devisors = unlist(lapply(trainAggWeek[,2:ncol(trainAggWeek)], cal.devisor))
week_hw_RMSSE_v = eval.RMSSE(testAggWeek, week_hw_pred_list, h = 4, devisor = week_devisors)
print(week_hw_RMSSE_v)
calendar = read.csv("./dat/calendar.csv")
x_var <- calendar
x_var$holiday <- 0
x_var[is.na(x_var$event_type_1)==F,]$holiday <- 1
x_var <- x_var[,c("snap_CA","holiday")]
x_var <- x_var[c(1:(nrow(x_var)-28)),]
x_var_train <- x_var[c(1:(nrow(x_var)-28)),]
x_var_train <- as.matrix(x_var_train)
x_var_test <- x_var[c((nrow(x_var)-27):nrow(x_var)),]
x_var_test <- as.matrix(x_var_test)
ts_list = lapply(trainData[,2:ncol(rawData)], ts)
devisors = unlist(lapply(trainData[,2:ncol(trainData)], cal.devisor))
esx_snap_crossH_RMSSE = data.frame()
for (h in 1:28) {
esx_snap_pred_list = lapply(ts_list, ses, h=h, xreg =x_var_train$snap_CA)
esx_snap_RMSSE_v = eval.RMSSE(testData, esx_snap_pred_list, h = h, devisor = devisors)
esx_snap_crossH_RMSSE = rbind(esx_snap_crossH_RMSSE, esx_snap_RMSSE_v)
}
names(esx_snap_crossH_RMSSE) = names(esx_snap_RMSSE_v)
print(esx_snap_crossH_RMSSE)
# snap
ts_list = lapply(trainData[,2:ncol(rawData)], ts)
devisors = unlist(lapply(trainData[,2:ncol(trainData)], cal.devisor))
esx_holiday_crossH_RMSSE = data.frame()
for (h in 1:28) {
esx_holiday_pred_list = lapply(ts_list, ses, h=h, xreg =x_var_train$holidy)
esx_holiday_RMSSE_v = eval.RMSSE(testData, esx_holiday_pred_list, h = h, devisor = devisors)
esx_holiday_crossH_RMSSE = rbind(esx_holiday_crossH_RMSSE, esx_holiday_RMSSE_v)
}
names(esx_holiday_crossH_RMSSE) = names(esx_holiday_RMSSE_v)
print(esx_holiday_crossH_RMSSE)
# holiday
print(lapply(ts_list, ses, h=h, xreg =x_var_train$snap_CA))
print(lapply(ts_list, ses, h=h, xreg =x_var_train$holidy))
esx_snap_RMSE_train_v = eval.RMSE(trainData, esx_snap_pred_list, mode = "train")
esx_snap_RMSE_test_v = eval.RMSE(testData, esx_snap_pred_list, mode = "test")
esx_holiday_RMSE_train_v = eval.RMSE(trainData, esx_holiday_pred_list, mode = "train")
esx_holiday_RMSE_test_v = eval.RMSE(testData, esx_holiday_pred_list, mode = "test")
cat_ts_list = lapply(trainAggCat[,2:ncol(trainAggCat)], ts)
cat_esx_snap_list = lapply(cat_ts_list, ses, h=4)
cat_devisors = unlist(lapply(trainAggCat[,2:ncol(trainAggCat)], cal.devisor))
cat_esx_snap_RMSSE_v = eval.RMSSE(testAggCat, cat_esx_snap_list, h=4, devisor = cat_devisors)
print(cat_esx_snap_RMSSE_v)
store_ts_list = lapply(trainAggStore[,2:ncol(trainAggStore)], ts)
store_esx_snap_list = lapply(store_ts_list, ses, h=4)
store_devisors = unlist(lapply(trainAggStore[,2:ncol(trainAggStore)], cal.devisor))
store_esx_snap_RMSSE_v = eval.RMSSE(testAggStore, store_esx_snap_list, h=4, devisor = store_devisors)
print(store_esx_snap_RMSSE_v)
week_ts_list = lapply(trainAggWeek[,2:ncol(trainAggWeek)], ts)
week_esx_snap_list = lapply(week_ts_list, ses, h=4)
week_devisors = unlist(lapply(trainAggWeek[,2:ncol(trainAggWeek)], cal.devisor))
week_esx_snap_RMSSE_v = eval.RMSSE(testAggWeek, week_esx_snap_list, h = 4, devisor = week_devisors)
print(week_esx_snap_RMSSE_v)
cat_ts_list = lapply(trainAggCat[,2:ncol(trainAggCat)], ts)
cat_esx_holiday_list = lapply(cat_ts_list, ses, h=4)
cat_devisors = unlist(lapply(trainAggCat[,2:ncol(trainAggCat)], cal.devisor))
cat_esx_holiday_RMSSE_v = eval.RMSSE(testAggCat, cat_esx_holiday_list, h=4, devisor = cat_devisors)
print(cat_esx_holiday_RMSSE_v)
store_ts_list = lapply(trainAggStore[,2:ncol(trainAggStore)], ts)
store_esx_holiday_list = lapply(store_ts_list, ses, h=4)
store_devisors = unlist(lapply(trainAggStore[,2:ncol(trainAggStore)], cal.devisor))
store_esx_holiday_RMSSE_v = eval.RMSSE(testAggStore, store_esx_holiday_list, h=4, devisor = store_devisors)
print(store_esx_holiday_RMSSE_v)
week_ts_list = lapply(trainAggWeek[,2:ncol(trainAggWeek)], ts)
week_esx_holiday_list = lapply(week_ts_list, ses, h=4)
week_devisors = unlist(lapply(trainAggWeek[,2:ncol(trainAggWeek)], cal.devisor))
week_esx_holiday_RMSSE_v = eval.RMSSE(testAggWeek, week_esx_holiday_list, h = 4, devisor = week_devisors)
print(week_esx_holiday_RMSSE_v)
